{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./employee.service\";\nimport * as i2 from \"@angular/common\";\nfunction HomeComponent_ng_template_1_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", col_r4.header, \" \");\n  }\n}\nfunction HomeComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, HomeComponent_ng_template_1_th_1_Template, 2, 1, \"th\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const columns_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r2);\n  }\n}\nfunction HomeComponent_ng_template_2_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r8 = ctx.$implicit;\n    const rowData_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", rowData_r5[col_r8.field], \" \");\n  }\n}\nfunction HomeComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, HomeComponent_ng_template_2_td_1_Template, 2, 1, \"td\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const columns_r6 = ctx.columns;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r6);\n  }\n}\nexport class HomeComponent {\n  constructor(employeeService) {\n    this.employeeService = employeeService;\n    this.allEmployees = [];\n    this.employees = [];\n    this.employeeService.get().subscribe(data => {\n      this.allEmployees = data;\n      this.totalRecords = this.allEmployees.length;\n      // this.loadPage(0,this.rows); \n    });\n  }\n\n  ngOnInit() {\n    this.cols = [{\n      field: 'emplId',\n      header: 'Employee Id'\n    }, {\n      field: 'Education',\n      header: 'Education'\n    }, {\n      field: 'JoiningYear',\n      header: 'Joining Year'\n    }, {\n      field: 'City',\n      header: 'City'\n    }, {\n      field: 'PaymentTier',\n      header: 'Payment Tier'\n    }, {\n      field: 'Age',\n      header: 'Age'\n    }, {\n      field: 'Gender',\n      header: 'Gender'\n    }, {\n      field: 'EverBenched',\n      header: 'Ever Benched'\n    }, {\n      field: 'ExperienceInCurrentDomain',\n      header: 'Experience In Current Domain'\n    }, {\n      field: 'LeaveOrNot',\n      header: 'Leave Or Not'\n    }\n    // Define other columns here\n    ];\n\n    this.loading = true;\n    // Optionally preload data here or wait for lazy load event\n  }\n\n  loadEmployeesLazy(event) {\n    this.loading = true;\n    // Assuming your service has a method to fetch data with pagination, sort, and filter\n    // The event object contains properties such as first, rows, sortField, sortOrder, filters\n    //this.employeeService.get().subscribe((data:any) => {\n    //  this.employees = data.employees; // Adjust based on your data structure\n    //  this.totalRecords = data.totalRecords; // Adjust based on your data structure\n    //  this.loading = false;\n    //});\n    setTimeout(() => {\n      let loadedEmployees = this.allEmployees.slice(event.first ?? 0, (event.first ?? 0) + (event.rows ?? 0));\n      Array.prototype.splice.apply(this.employees, [event.first ?? 0, event.rows ?? 0, ...loadedEmployees]);\n      this.employees = [...this.employees];\n    }, 1000);\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 3,\n  vars: 6,\n  consts: [[3, \"value\", \"columns\", \"paginator\", \"rows\", \"totalRecords\", \"lazy\", \"onLazyLoad\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-table\", 0);\n      i0.ɵɵlistener(\"onLazyLoad\", function HomeComponent_Template_p_table_onLazyLoad_0_listener($event) {\n        return ctx.loadEmployeesLazy($event);\n      });\n      i0.ɵɵtemplate(1, HomeComponent_ng_template_1_Template, 2, 1, \"ng-template\", 1);\n      i0.ɵɵtemplate(2, HomeComponent_ng_template_2_Template, 2, 1, \"ng-template\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"value\", ctx.employees)(\"columns\", ctx.cols)(\"paginator\", true)(\"rows\", 10)(\"totalRecords\", ctx.totalRecords)(\"lazy\", true);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n});","map":{"version":3,"mappings":";;;;;IAGMA,0BAAgC;IAC9BA,YACF;IAAAA,iBAAK;;;;IADHA,eACF;IADEA,8CACF;;;;;IAHFA,0BAAI;IACFA,0EAEK;IACPA,iBAAK;;;;IAHiBA,eAAU;IAAVA,oCAAU;;;;;IAO9BA,0BAAgC;IAC9BA,YACF;IAAAA,iBAAK;;;;;IADHA,eACF;IADEA,yDACF;;;;;IAHFA,0BAAI;IACFA,0EAEK;IACPA,iBAAK;;;;IAHiBA,eAAU;IAAVA,oCAAU;;;ACApC,OAAM,MAAOC,aAAa;EAOxBC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IANnC,iBAAY,GAAU,EAAE;IACxB,cAAS,GAAU,EAAE;IAMnB,IAAI,CAACA,eAAe,CAACC,GAAG,EAAE,CAACC,SAAS,CAAEC,IAAgB,IAAI;MACxD,IAAI,CAACC,YAAY,GAAGD,IAAI;MACxB,IAAI,CAACE,YAAY,GAAG,IAAI,CAACD,YAAY,CAACE,MAAM;MAC5C;IACF,CAAC,CAAC;EACJ;;EAEAC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,CACV;MAAEC,KAAK,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAa,CAAE,EAC1C;MAAED,KAAK,EAAE,WAAW;MAAEC,MAAM,EAAE;IAAW,CAAE,EAC3C;MAAED,KAAK,EAAE,aAAa;MAAEC,MAAM,EAAE;IAAc,CAAE,EAChD;MAAED,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAM,CAAE,EACjC;MAAED,KAAK,EAAE,aAAa;MAAEC,MAAM,EAAE;IAAc,CAAE,EAChD;MAAED,KAAK,EAAE,KAAK;MAAEC,MAAM,EAAE;IAAK,CAAE,EAC/B;MAAED,KAAK,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAQ,CAAE,EACrC;MAAED,KAAK,EAAE,aAAa;MAAEC,MAAM,EAAE;IAAc,CAAE,EAChD;MAAED,KAAK,EAAE,2BAA2B;MAAEC,MAAM,EAAE;IAA8B,CAAE,EAC9E;MAAED,KAAK,EAAE,YAAY;MAAEC,MAAM,EAAE;IAAc;IAC7C;IAAA,CACD;;IACD,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB;EACF;;EAEAC,iBAAiB,CAACC,KAAoB;IACpC,IAAI,CAACF,OAAO,GAAG,IAAI;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;IACAG,UAAU,CAAC,MAAK;MACd,IAAIC,eAAe,GAAG,IAAI,CAACX,YAAY,CAACY,KAAK,CAACH,KAAK,CAACI,KAAK,IAAI,CAAC,EAAG,CAACJ,KAAK,CAACI,KAAK,IAAI,CAAC,KAAKJ,KAAK,CAACK,IAAI,IAAI,CAAC,CAAC,CAAE;MACzGC,KAAK,CAACC,SAAS,CAACC,MAAM,CAACC,KAAK,CAAC,IAAI,CAACC,SAAS,EAAE,CAAEV,KAAK,CAACI,KAAK,IAAI,CAAC,EAAIJ,KAAK,CAACK,IAAI,IAAI,CAAC,EAAG,GAAGH,eAAe,CAAC,CAAC;MACzG,IAAI,CAACQ,SAAS,GAAG,CAAC,GAAG,IAAI,CAACA,SAAS,CAAC;IACtC,CAAC,EAAE,IAAI,CAAC;EACV;;AA/CWzB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV1B/B,kCAAkK;MAAzCA;QAAA,OAAcgC,6BAAyB;MAAA,EAAC;MAC/JhC,8EAMc;MACdA,8EAMc;MAChBA,iBAAU;;;MAfDA,qCAAmB","names":["i0","HomeComponent","constructor","employeeService","get","subscribe","data","allEmployees","totalRecords","length","ngOnInit","cols","field","header","loading","loadEmployeesLazy","event","setTimeout","loadedEmployees","slice","first","rows","Array","prototype","splice","apply","employees","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\deekshita.nair\\Downloads\\.NET\\MVCANGULAR\\MVCANGULAR\\ClientApp\\src\\app\\home\\home.component.html","C:\\Users\\deekshita.nair\\Downloads\\.NET\\MVCANGULAR\\MVCANGULAR\\ClientApp\\src\\app\\home\\home.component.ts"],"sourcesContent":["<p-table [value]=\"employees\" [columns]=\"cols\" [paginator]=\"true\" [rows]=\"10\" [totalRecords]=\"totalRecords\" [lazy]=\"true\" (onLazyLoad)=\"loadEmployeesLazy($event)\">\n  <ng-template pTemplate=\"header\" let-columns>\n    <tr>\n      <th *ngFor=\"let col of columns\">\n        {{col.header}}\n      </th>\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n    <tr>\n      <td *ngFor=\"let col of columns\">\n        {{rowData[col.field]}}\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n","import { Component, OnInit } from '@angular/core';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { EmployeeService } from './employee.service';\r\nimport { Employee } from './home';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  allEmployees: any[] = [];\r\n  employees: any[] = [];\r\n  cols!: any[];\r\n  totalRecords!: number;\r\n  loading!: boolean;\r\n\r\n  constructor(private employeeService: EmployeeService) {\r\n    this.employeeService.get().subscribe((data: Employee[]) => {\r\n      this.allEmployees = data;\r\n      this.totalRecords = this.allEmployees.length;\r\n      // this.loadPage(0,this.rows); \r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.cols = [\r\n      { field: 'emplId', header: 'Employee Id' },\r\n      { field: 'Education', header: 'Education' },\r\n      { field: 'JoiningYear', header: 'Joining Year' },\r\n      { field: 'City', header: 'City' },\r\n      { field: 'PaymentTier', header: 'Payment Tier' },\r\n      { field: 'Age', header: 'Age' },\r\n      { field: 'Gender', header: 'Gender' },\r\n      { field: 'EverBenched', header: 'Ever Benched' },\r\n      { field: 'ExperienceInCurrentDomain', header: 'Experience In Current Domain' },\r\n      { field: 'LeaveOrNot', header: 'Leave Or Not' }\r\n      // Define other columns here\r\n    ];\r\n    this.loading = true;\r\n    // Optionally preload data here or wait for lazy load event\r\n  }\r\n\r\n  loadEmployeesLazy(event: LazyLoadEvent) {\r\n    this.loading = true;\r\n    // Assuming your service has a method to fetch data with pagination, sort, and filter\r\n    // The event object contains properties such as first, rows, sortField, sortOrder, filters\r\n    //this.employeeService.get().subscribe((data:any) => {\r\n    //  this.employees = data.employees; // Adjust based on your data structure\r\n    //  this.totalRecords = data.totalRecords; // Adjust based on your data structure\r\n    //  this.loading = false;\r\n    //});\r\n    setTimeout(() => {\r\n      let loadedEmployees = this.allEmployees.slice(event.first ?? 0, ((event.first ?? 0) + (event.rows ?? 0)));\r\n      Array.prototype.splice.apply(this.employees, [(event.first ?? 0), (event.rows ?? 0), ...loadedEmployees]);\r\n      this.employees = [...this.employees];\r\n    }, 1000);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}